@attribute [Authorize]
@page "/report"
@using SimurgWeb.Services
@inject ReportService reportService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Forms

<div class="container my-4">
    <!-- Üst Kısım -->
    <div class="row align-items-center mb-4">
        <div class="col-md-4">
            <select class="form-select" aria-label="Proje Seçimi" @bind="selectedProject" @bind:after="OnProjectChanged">
                <option value="">Proje Seçin</option>
                @if (projectList != null && projectList.Any())
                {
                    @foreach (var project in projectList)
                    {
                        <option value="@project.Id">@project.ProjectName</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-4">
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" id="option1" name="options" checked value="0" @onchange="SetIncomeExpense">
                <label class="form-check-label" for="income">Tümü</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" id="option1" name="options" value="1" @onchange="SetIncomeExpense">
                <label class="form-check-label" for="income">Gelir</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" id="option2" name="options" value="2" @onchange="SetIncomeExpense">
                <label class="form-check-label" for="expense">Gider</label>
            </div>
        </div>
        <div class="col-md-4 text-end">
            <button class="btn btn-primary" @onclick="GenerateReport">Raporla</button>
        </div>
    </div>

    <!-- Liste -->
    <div class="row">
        <div class="col-12">
            <ul class="list-group">
                @if (incomeExpenseItemList != null && incomeExpenseItemList.Any())
                {
                    @foreach (var item in incomeExpenseItemList)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>@item.Description</span>
                            <span class="badge bg-primary rounded-pill">@($"{item.Amount:N2} ₺")</span>
                        </li>
                    }
                }
                else
                {
                    <li class="list-group-item">Liste boş.</li>
                }
            </ul>
        </div>
    </div>

    <!-- Toplam Fiyat -->
    <div class="row mt-4">
        <div class="col-12 text-end">
            <h5>Toplam Fiyat: <span id="totalPrice">@($"{totalAmount:N2} ₺")</span></h5>
        </div>
    </div>
</div>

@code {
    public List<ProjectList> projectList { get; set; } = new();
    public List<IncomeExpenseItems> incomeExpenseItemList { get; set; } = new();
    public int selectedProject { get; set; }
    public bool? isExpense = null;
    public decimal totalAmount = 0M;    

    protected override async Task OnInitializedAsync()
    {
        projectList = await reportService.GetProjectList();
    }

    private async Task OnProjectChanged()
    {
        // Proje değiştiğinde dosya ve listeyi sıfırla
        incomeExpenseItemList.Clear();
        totalAmount = 0M;
    }

    private async Task SetIncomeExpense(ChangeEventArgs e)
    {
        var selectVal = e.Value as string;
        switch (selectVal)
        {
            case "0":
                isExpense = null;
                break;
            case "1":
                isExpense = true;
                break;
            case "2":
                isExpense = false;
                break;
            default:
                isExpense = true;
                break;
        }
    }

    private async Task GenerateReport()
    {
        // Raporu yükle
        incomeExpenseItemList = await reportService.GetIncomeExpenseList(isExpense, selectedProject);
        totalAmount = reportService.GetTotalAmount(incomeExpenseItemList);
    }   
}
